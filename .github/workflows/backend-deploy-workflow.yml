on:
  push:
    branches:
      - master
    paths:
      - "backend/**"

name: Deploy backend to Amazon ECS

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set Google Aplication Credentials
        env:
          GOOGLE_APPLICATION_CREDENTIALS_JSON: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        run: |
          touch google-credential.json
          echo ${GOOGLE_APPLICATION_CREDENTIALS_JSON} > google-credential.json
        working-directory: ./backend

      - name: Make task-definition
        env:
          TASK_DEFINITION_JSON: ${{ secrets.AWS_ECS_TASK_DEFINITION }}
        run: |
          touch task-definition.json
          echo ${TASK_DEFINITION_JSON} > task-definition.json

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPO_NAME}}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./backend
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: jackhack-2021-backend-dev
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: jackhack-2021-backend-dev-v1
          cluster: jackhack-2021-backend-dev
          wait-for-service-stability: true

      - name: Slack Notification Success
        uses: rtCamp/action-slack-notify@v2.0.0
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_COLOR: "#5cb85c"
          SLACK_TITLE: "Success to Deploy to GitHub Pages :rocket:"
          SLACK_MESSAGE: ":closed_book: ${{ github.repository }}"

      - name: Slack Notification Failure
        if: failure()
        uses: rtCamp/action-slack-notify@v2.0.0
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_COLOR: "#dc143c"
          SLACK_TITLE: "Failure to Deploy to GitHub Pages :boom:"
          SLACK_MESSAGE: ":closed_book: ${{ github.repository }}"
